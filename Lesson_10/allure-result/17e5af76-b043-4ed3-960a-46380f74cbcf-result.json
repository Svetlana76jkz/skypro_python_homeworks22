{"name": "Получить сотрудника по id", "status": "failed", "statusDetails": {"message": "AssertionError: assert True == False", "trace": "@allure.id(\"SkyPro-3\")\n    @allure.epic(\"Сотрудники\")\n    @allure.severity(\"blocker\")\n    @allure.story(\"Получение сотрудника по id\")\n    @allure.feature(\"READ\")\n    @allure.title(\"Получить сотрудника по id\")\n    @allure.suite(\"Тесты на работу с сотрудниками\")\n    def test_get_one_employee():\n        with allure.step(\"Cоздать новую организацию\"):\n            name, description = generate_company()\n            db.create_company_db(name, description)\n    \n        max_id = db.get_max_id_company(id)\n    \n        api_list_before = api.get_employees_list(max_id)\n        db_list_before = db.get_emploees_db(max_id)\n    \n        with allure.step(\"Добавить нового сотрудника\"):\n            firstName, lastName, middleName, phone, email, birthdate, url, isActive = generate_employee(max_id)\n            db.create_employee_db(firstName, lastName, middleName, phone, email, birthdate, url, max_id, isActive)\n    \n        max_id_empl = db.get_max_id_employee(id)\n    \n        api_list_after = api.get_employees_list(max_id)\n        db_list_after = db.get_emploees_db(max_id)\n    \n    \n        new_employee = api.get_employee(max_id_empl)\n    \n        with allure.step(\"Проверить разницу\"):\n            with allure.step(\"Проверить, что список API = db до создания сотрудника\"):\n                assert len(api_list_before) == len(db_list_before)\n            with allure.step(\"Проверить, что список API = db после создания сотрудника\"):\n                assert len(api_list_after) == len(db_list_after)\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в API на 1\"):\n                assert len(api_list_after) - len(api_list_before) == 1\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в db на 1\"):\n                assert len(db_list_after) - len(db_list_before) == 1\n    \n        with allure.step(\"Проверить,что поля нового сотрудника. Корректно заполнены\"):\n            assert new_employee[\"firstName\"] == firstName\n            assert  new_employee[\"lastName\"] ==  lastName\n            assert new_employee[\"middleName\"] == middleName\n            assert new_employee[\"companyId\"] == max_id\n            #assert new_employee[\"phone\"] ==  phone\n            assert new_employee['avatar_url'] == url\n            assert new_employee[\"birthdate\"] == birthdate\n>           assert new_employee[\"isActive\"] == False\nE           assert True == False\n\ndb_employees_test.py:161: AssertionError"}, "steps": [{"name": "Cоздать новую организацию", "status": "passed", "steps": [{"name": "Метод для генерации названия организации", "status": "passed", "start": 1716745215142, "stop": 1716745215142}, {"name": "БД.Создать организацию с названием 'Ксения Александровна Якушева':'Рот возмутиться.'", "status": "passed", "attachments": [{"name": "SQL", "source": "de203553-8a12-49ed-a4eb-43f9a97e3511-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'Ксения Александровна Якушева'"}, {"name": "description", "value": "'Рот возмутиться.'"}], "start": 1716745215143, "stop": 1716745220305}], "start": 1716745215142, "stop": 1716745220306}, {"name": "БД. Получить максимальный <built-in function id> организации", "status": "passed", "attachments": [{"name": "SQL", "source": "431d77c8-1282-4f40-9e5f-4f89415176f8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "id", "value": "<built-in function id>"}], "start": 1716745220306, "stop": 1716745221039}, {"name": "api.Получить список сотрудников организации 4187", "status": "passed", "parameters": [{"name": "companyId", "value": "4187"}], "start": 1716745221039, "stop": 1716745222966}, {"name": "БД. Получить список сотрудников организации 4187", "status": "passed", "attachments": [{"name": "SQL", "source": "b789527a-1407-4640-97ce-2a3e93413a33-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "company_id", "value": "4187"}], "start": 1716745222967, "stop": 1716745224410}, {"name": "Добавить нового сотрудника", "status": "passed", "steps": [{"name": "Метод для генерации названий сотрудника", "status": "passed", "parameters": [{"name": "companyId", "value": "4187"}], "start": 1716745224411, "stop": 1716745224412}, {"name": "БД.Создать организацию с названием 'Никанор':'Белоусова':'Вероникаовна':10420232114:'fadeevsamuil@example.com':'1976-07-02':'http://www.ooo.com/':4187:True", "status": "passed", "attachments": [{"name": "SQL", "source": "1f4fdbb4-2e18-4df0-a1e3-18accf1bcdda-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "first_name", "value": "'Никанор'"}, {"name": "last_name", "value": "'Белоусова'"}, {"name": "middle_name", "value": "'Вероникаовна'"}, {"name": "phone", "value": "10420232114"}, {"name": "email", "value": "'fadeevsamuil@example.com'"}, {"name": "birthdate", "value": "'1976-07-02'"}, {"name": "avatar_url", "value": "'http://www.ooo.com/'"}, {"name": "company_id", "value": "4187"}, {"name": "is_active", "value": "True"}], "start": 1716745224412, "stop": 1716745225114}], "start": 1716745224410, "stop": 1716745225114}, {"name": "БД. Получить максимальный <built-in function id> сотрудника", "status": "passed", "attachments": [{"name": "SQL", "source": "19e9cedf-d5ef-451c-98d9-0b889c226110-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "id", "value": "<built-in function id>"}], "start": 1716745225114, "stop": 1716745225707}, {"name": "api.Получить список сотрудников организации 4187", "status": "passed", "parameters": [{"name": "companyId", "value": "4187"}], "start": 1716745225708, "stop": 1716745233828}, {"name": "БД. Получить список сотрудников организации 4187", "status": "passed", "attachments": [{"name": "SQL", "source": "cffc5908-d7e6-452a-8d84-ace2247a0ef9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "company_id", "value": "4187"}], "start": 1716745233829, "stop": 1716745234427}, {"name": "api.Получить сотрудника по 2909", "status": "passed", "parameters": [{"name": "id", "value": "2909"}], "start": 1716745234427, "stop": 1716745236464}, {"name": "Проверить разницу", "status": "passed", "steps": [{"name": "Проверить, что список API = db до создания сотрудника", "status": "passed", "start": 1716745236464, "stop": 1716745236465}, {"name": "Проверить, что список API = db после создания сотрудника", "status": "passed", "start": 1716745236465, "stop": 1716745236465}, {"name": "Проверить, что список ДО меньше списка ПОСЛЕ в API на 1", "status": "passed", "start": 1716745236465, "stop": 1716745236465}, {"name": "Проверить, что список ДО меньше списка ПОСЛЕ в db на 1", "status": "passed", "start": 1716745236465, "stop": 1716745236466}], "start": 1716745236464, "stop": 1716745236466}, {"name": "Проверить,что поля нового сотрудника. Корректно заполнены", "status": "failed", "statusDetails": {"message": "AssertionError: assert True == False\n", "trace": "  File \"C:\\Users\\User\\Documents\\GitHub\\desktop-tutorial\\skypro_python_homeworks22\\Lesson_10\\db_employees_test.py\", line 161, in test_get_one_employee\n    assert new_employee[\"isActive\"] == False\n"}, "start": 1716745236466, "stop": 1716745236479}], "start": 1716745215141, "stop": 1716745236501, "uuid": "dd758e4a-2895-4046-82dd-6e61d1203703", "historyId": "ec8db6dd62589b489a7ae5b495243d57", "testCaseId": "ec8db6dd62589b489a7ae5b495243d57", "fullName": "Lesson_10.db_employees_test#test_get_one_employee", "labels": [{"name": "severity", "value": "blocker"}, {"name": "feature", "value": "READ"}, {"name": "suite", "value": "Тесты на работу с сотрудниками"}, {"name": "as_id", "value": "SkyPro-3"}, {"name": "story", "value": "Получение сотрудника по id"}, {"name": "epic", "value": "Сотрудники"}, {"name": "parentSuite", "value": "Lesson_10"}, {"name": "host", "value": "DESKTOP-UVLT28S"}, {"name": "thread", "value": "74656-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Lesson_10.db_employees_test"}]}