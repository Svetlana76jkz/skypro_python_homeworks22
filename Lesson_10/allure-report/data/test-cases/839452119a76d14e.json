{"uid":"839452119a76d14e","name":"Получить сотрудника по id","fullName":"Lesson_10.db_employees_test#test_get_one_employee","historyId":"ec8db6dd62589b489a7ae5b495243d57","time":{"start":1716745215141,"stop":1716745236501,"duration":21360},"status":"failed","statusMessage":"AssertionError: assert True == False","statusTrace":"@allure.id(\"SkyPro-3\")\n    @allure.epic(\"Сотрудники\")\n    @allure.severity(\"blocker\")\n    @allure.story(\"Получение сотрудника по id\")\n    @allure.feature(\"READ\")\n    @allure.title(\"Получить сотрудника по id\")\n    @allure.suite(\"Тесты на работу с сотрудниками\")\n    def test_get_one_employee():\n        with allure.step(\"Cоздать новую организацию\"):\n            name, description = generate_company()\n            db.create_company_db(name, description)\n    \n        max_id = db.get_max_id_company(id)\n    \n        api_list_before = api.get_employees_list(max_id)\n        db_list_before = db.get_emploees_db(max_id)\n    \n        with allure.step(\"Добавить нового сотрудника\"):\n            firstName, lastName, middleName, phone, email, birthdate, url, isActive = generate_employee(max_id)\n            db.create_employee_db(firstName, lastName, middleName, phone, email, birthdate, url, max_id, isActive)\n    \n        max_id_empl = db.get_max_id_employee(id)\n    \n        api_list_after = api.get_employees_list(max_id)\n        db_list_after = db.get_emploees_db(max_id)\n    \n    \n        new_employee = api.get_employee(max_id_empl)\n    \n        with allure.step(\"Проверить разницу\"):\n            with allure.step(\"Проверить, что список API = db до создания сотрудника\"):\n                assert len(api_list_before) == len(db_list_before)\n            with allure.step(\"Проверить, что список API = db после создания сотрудника\"):\n                assert len(api_list_after) == len(db_list_after)\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в API на 1\"):\n                assert len(api_list_after) - len(api_list_before) == 1\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в db на 1\"):\n                assert len(db_list_after) - len(db_list_before) == 1\n    \n        with allure.step(\"Проверить,что поля нового сотрудника. Корректно заполнены\"):\n            assert new_employee[\"firstName\"] == firstName\n            assert  new_employee[\"lastName\"] ==  lastName\n            assert new_employee[\"middleName\"] == middleName\n            assert new_employee[\"companyId\"] == max_id\n            #assert new_employee[\"phone\"] ==  phone\n            assert new_employee['avatar_url'] == url\n            assert new_employee[\"birthdate\"] == birthdate\n>           assert new_employee[\"isActive\"] == False\nE           assert True == False\n\ndb_employees_test.py:161: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1716745119976,"stop":1716745120935,"duration":959},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert True == False","statusTrace":"@allure.id(\"SkyPro-3\")\n    @allure.epic(\"Сотрудники\")\n    @allure.severity(\"blocker\")\n    @allure.story(\"Получение сотрудника по id\")\n    @allure.feature(\"READ\")\n    @allure.title(\"Получить сотрудника по id\")\n    @allure.suite(\"Тесты на работу с сотрудниками\")\n    def test_get_one_employee():\n        with allure.step(\"Cоздать новую организацию\"):\n            name, description = generate_company()\n            db.create_company_db(name, description)\n    \n        max_id = db.get_max_id_company(id)\n    \n        api_list_before = api.get_employees_list(max_id)\n        db_list_before = db.get_emploees_db(max_id)\n    \n        with allure.step(\"Добавить нового сотрудника\"):\n            firstName, lastName, middleName, phone, email, birthdate, url, isActive = generate_employee(max_id)\n            db.create_employee_db(firstName, lastName, middleName, phone, email, birthdate, url, max_id, isActive)\n    \n        max_id_empl = db.get_max_id_employee(id)\n    \n        api_list_after = api.get_employees_list(max_id)\n        db_list_after = db.get_emploees_db(max_id)\n    \n    \n        new_employee = api.get_employee(max_id_empl)\n    \n        with allure.step(\"Проверить разницу\"):\n            with allure.step(\"Проверить, что список API = db до создания сотрудника\"):\n                assert len(api_list_before) == len(db_list_before)\n            with allure.step(\"Проверить, что список API = db после создания сотрудника\"):\n                assert len(api_list_after) == len(db_list_after)\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в API на 1\"):\n                assert len(api_list_after) - len(api_list_before) == 1\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в db на 1\"):\n                assert len(db_list_after) - len(db_list_before) == 1\n    \n        with allure.step(\"Проверить,что поля нового сотрудника. Корректно заполнены\"):\n            assert new_employee[\"firstName\"] == firstName\n            assert  new_employee[\"lastName\"] ==  lastName\n            assert new_employee[\"middleName\"] == middleName\n            assert new_employee[\"companyId\"] == max_id\n            #assert new_employee[\"phone\"] ==  phone\n            assert new_employee['avatar_url'] == url\n            assert new_employee[\"birthdate\"] == birthdate\n>           assert new_employee[\"isActive\"] == False\nE           assert True == False\n\ndb_employees_test.py:161: AssertionError","steps":[{"name":"Cоздать новую организацию","time":{"start":1716745215142,"stop":1716745220306,"duration":5164},"status":"passed","steps":[{"name":"Метод для генерации названия организации","time":{"start":1716745215142,"stop":1716745215142,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"БД.Создать организацию с названием 'Ксения Александровна Якушева':'Рот возмутиться.'","time":{"start":1716745215143,"stop":1716745220305,"duration":5162},"status":"passed","steps":[],"attachments":[{"uid":"345da066d354001e","name":"SQL","source":"345da066d354001e.txt","type":"text/plain","size":390}],"parameters":[{"name":"name","value":"'Ксения Александровна Якушева'"},{"name":"description","value":"'Рот возмутиться.'"}],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":2},{"name":"БД. Получить максимальный <built-in function id> организации","time":{"start":1716745220306,"stop":1716745221039,"duration":733},"status":"passed","steps":[],"attachments":[{"uid":"829ef247586b5a8d","name":"SQL","source":"829ef247586b5a8d.txt","type":"text/plain","size":30}],"parameters":[{"name":"id","value":"<built-in function id>"}],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"api.Получить список сотрудников организации 4187","time":{"start":1716745221039,"stop":1716745222966,"duration":1927},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"companyId","value":"4187"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"БД. Получить список сотрудников организации 4187","time":{"start":1716745222967,"stop":1716745224410,"duration":1443},"status":"passed","steps":[],"attachments":[{"uid":"bc38a5283877c8b8","name":"SQL","source":"bc38a5283877c8b8.txt","type":"text/plain","size":49}],"parameters":[{"name":"company_id","value":"4187"}],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"Добавить нового сотрудника","time":{"start":1716745224410,"stop":1716745225114,"duration":704},"status":"passed","steps":[{"name":"Метод для генерации названий сотрудника","time":{"start":1716745224411,"stop":1716745224412,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"companyId","value":"4187"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"БД.Создать организацию с названием 'Никанор':'Белоусова':'Вероникаовна':10420232114:'fadeevsamuil@example.com':'1976-07-02':'http://www.ooo.com/':4187:True","time":{"start":1716745224412,"stop":1716745225114,"duration":702},"status":"passed","steps":[],"attachments":[{"uid":"b623ad609ab6bf00","name":"SQL","source":"b623ad609ab6bf00.txt","type":"text/plain","size":454}],"parameters":[{"name":"first_name","value":"'Никанор'"},{"name":"last_name","value":"'Белоусова'"},{"name":"middle_name","value":"'Вероникаовна'"},{"name":"phone","value":"10420232114"},{"name":"email","value":"'fadeevsamuil@example.com'"},{"name":"birthdate","value":"'1976-07-02'"},{"name":"avatar_url","value":"'http://www.ooo.com/'"},{"name":"company_id","value":"4187"},{"name":"is_active","value":"True"}],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":2},{"name":"БД. Получить максимальный <built-in function id> сотрудника","time":{"start":1716745225114,"stop":1716745225707,"duration":593},"status":"passed","steps":[],"attachments":[{"uid":"17adf9dc277693f7","name":"SQL","source":"17adf9dc277693f7.txt","type":"text/plain","size":31}],"parameters":[{"name":"id","value":"<built-in function id>"}],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"api.Получить список сотрудников организации 4187","time":{"start":1716745225708,"stop":1716745233828,"duration":8120},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"companyId","value":"4187"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"БД. Получить список сотрудников организации 4187","time":{"start":1716745233829,"stop":1716745234427,"duration":598},"status":"passed","steps":[],"attachments":[{"uid":"1747dcbdaefaca20","name":"SQL","source":"1747dcbdaefaca20.txt","type":"text/plain","size":49}],"parameters":[{"name":"company_id","value":"4187"}],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"api.Получить сотрудника по 2909","time":{"start":1716745234427,"stop":1716745236464,"duration":2037},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"id","value":"2909"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"Проверить разницу","time":{"start":1716745236464,"stop":1716745236466,"duration":2},"status":"passed","steps":[{"name":"Проверить, что список API = db до создания сотрудника","time":{"start":1716745236464,"stop":1716745236465,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"Проверить, что список API = db после создания сотрудника","time":{"start":1716745236465,"stop":1716745236465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"Проверить, что список ДО меньше списка ПОСЛЕ в API на 1","time":{"start":1716745236465,"stop":1716745236465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"Проверить, что список ДО меньше списка ПОСЛЕ в db на 1","time":{"start":1716745236465,"stop":1716745236466,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":4},{"name":"Проверить,что поля нового сотрудника. Корректно заполнены","time":{"start":1716745236466,"stop":1716745236479,"duration":13},"status":"failed","statusMessage":"AssertionError: assert True == False\n","statusTrace":"  File \"C:\\Users\\User\\Documents\\GitHub\\desktop-tutorial\\skypro_python_homeworks22\\Lesson_10\\db_employees_test.py\", line 161, in test_get_one_employee\n    assert new_employee[\"isActive\"] == False\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":6,"attachmentStep":false,"hasContent":true,"stepsCount":19},"afterStages":[],"labels":[{"name":"severity","value":"blocker"},{"name":"feature","value":"READ"},{"name":"suite","value":"Тесты на работу с сотрудниками"},{"name":"as_id","value":"SkyPro-3"},{"name":"story","value":"Получение сотрудника по id"},{"name":"epic","value":"Сотрудники"},{"name":"parentSuite","value":"Lesson_10"},{"name":"host","value":"DESKTOP-UVLT28S"},{"name":"thread","value":"74656-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Lesson_10.db_employees_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"839452119a76d14e.json","parameterValues":[]}