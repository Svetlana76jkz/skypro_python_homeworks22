{"name": "Получить сотрудника по id", "status": "failed", "statusDetails": {"message": "AssertionError: assert False == True", "trace": "@allure.id(\"SkyPro-3\")\n    @allure.epic(\"Сотрудники\")\n    @allure.severity(\"blocker\")\n    @allure.story(\"Получение сотрудника по id\")\n    @allure.feature(\"READ\")\n    @allure.title(\"Получить сотрудника по id\")\n    @allure.suite(\"Тесты на работу с сотрудниками\")\n    def test_get_one_employee():\n        with allure.step(\"Cоздать новую организацию\"):\n            name, description = generate_company()\n            db.create_company_db(name, description)\n    \n        max_id = db.get_max_id_company()\n    \n        api_list_before = api.get_employees_list(max_id)\n        db_list_before = db.get_emploees_db(max_id)\n    \n        with allure.step(\"Добавить нового сотрудника\"):\n            firstName, lastName, middleName, phone, email, birthdate, url, isActive = generate_employee(max_id)\n            db.create_employee_db(firstName, lastName, middleName, phone, email, birthdate, url, max_id, isActive)\n    \n        max_id_empl = db.get_max_id_employee()\n    \n        api_list_after = api.get_employees_list(max_id)\n        db_list_after = db.get_emploees_db(max_id)\n    \n    \n        new_employee = api.get_employee(max_id_empl)\n    \n        with allure.step(\"Проверить разницу\"):\n            with allure.step(\"Проверить, что список API = db до создания сотрудника\"):\n                assert len(api_list_before) == len(db_list_before)\n            with allure.step(\"Проверить, что список API = db после создания сотрудника\"):\n                assert len(api_list_after) == len(db_list_after)\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в API на 1\"):\n                assert len(api_list_after) - len(api_list_before) == 1\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в db на 1\"):\n                assert len(db_list_after) - len(db_list_before) == 1\n    \n        with allure.step(\"Проверить,что поля нового сотрудника. Корректно заполнены\"):\n            assert new_employee[\"firstName\"] == firstName\n            assert  new_employee[\"lastName\"] ==  lastName\n            assert new_employee[\"middleName\"] == middleName\n            assert new_employee[\"companyId\"] == max_id\n            #assert new_employee[\"phone\"] ==  phone\n            assert new_employee['avatar_url'] == url\n            assert new_employee[\"birthdate\"] == birthdate\n>           assert new_employee[\"isActive\"] == True\nE           assert False == True\n\ndb_employees_test.py:161: AssertionError"}, "steps": [{"name": "Cоздать новую организацию", "status": "passed", "steps": [{"name": "Метод для генерации названия организации", "status": "passed", "start": 1716723294251, "stop": 1716723294251}, {"name": "БД.Создать организацию с названием 'Шарапова Александра Артемовна':'Решение заведение.'", "status": "passed", "parameters": [{"name": "name", "value": "'Шарапова Александра Артемовна'"}, {"name": "description", "value": "'Решение заведение.'"}], "start": 1716723294251, "stop": 1716723295148}], "start": 1716723294251, "stop": 1716723295148}, {"name": "БД. Получить максимальный организации", "status": "passed", "start": 1716723295148, "stop": 1716723295768}, {"name": "api.Получить список сотрудников организации 4084", "status": "passed", "parameters": [{"name": "companyId", "value": "4084"}], "start": 1716723295769, "stop": 1716723297884}, {"name": "БД. Получить список сотрудников организации 4084", "status": "passed", "parameters": [{"name": "company_id", "value": "4084"}], "start": 1716723297885, "stop": 1716723298486}, {"name": "Добавить нового сотрудника", "status": "passed", "steps": [{"name": "Метод для генерации названий сотрудника", "status": "passed", "parameters": [{"name": "companyId", "value": "4084"}], "start": 1716723298487, "stop": 1716723298488}, {"name": "БД.Создать организацию с названием 'Регина':'Виноградова':'Матвейовна':31638873622:'yalekseev@example.com':'1976-07-02':'https://www.ooo.biz/':4084:False", "status": "passed", "parameters": [{"name": "first_name", "value": "'Регина'"}, {"name": "last_name", "value": "'Виноградова'"}, {"name": "middle_name", "value": "'Матвейовна'"}, {"name": "phone", "value": "31638873622"}, {"name": "email", "value": "'yalekseev@example.com'"}, {"name": "birthdate", "value": "'1976-07-02'"}, {"name": "avatar_url", "value": "'https://www.ooo.biz/'"}, {"name": "company_id", "value": "4084"}, {"name": "is_active", "value": "False"}], "start": 1716723298489, "stop": 1716723299124}], "start": 1716723298486, "stop": 1716723299124}, {"name": "БД. Получить максимальный id сотрудника", "status": "passed", "start": 1716723299124, "stop": 1716723299719}, {"name": "api.Получить список сотрудников организации 4084", "status": "passed", "parameters": [{"name": "companyId", "value": "4084"}], "start": 1716723299720, "stop": 1716723302449}, {"name": "БД. Получить список сотрудников организации 4084", "status": "passed", "parameters": [{"name": "company_id", "value": "4084"}], "start": 1716723302450, "stop": 1716723303202}, {"name": "api.Получить сотрудника по 2812", "status": "passed", "parameters": [{"name": "id", "value": "2812"}], "start": 1716723303202, "stop": 1716723305302}, {"name": "Проверить разницу", "status": "passed", "steps": [{"name": "Проверить, что список API = db до создания сотрудника", "status": "passed", "start": 1716723305302, "stop": 1716723305302}, {"name": "Проверить, что список API = db после создания сотрудника", "status": "passed", "start": 1716723305302, "stop": 1716723305302}, {"name": "Проверить, что список ДО меньше списка ПОСЛЕ в API на 1", "status": "passed", "start": 1716723305302, "stop": 1716723305302}, {"name": "Проверить, что список ДО меньше списка ПОСЛЕ в db на 1", "status": "passed", "start": 1716723305302, "stop": 1716723305302}], "start": 1716723305302, "stop": 1716723305302}, {"name": "Проверить,что поля нового сотрудника. Корректно заполнены", "status": "failed", "statusDetails": {"message": "AssertionError: assert False == True\n", "trace": "  File \"c:\\Users\\User\\Documents\\GitHub\\desktop-tutorial\\skypro_python_homeworks22\\Lesson_9\\db_employees_test.py\", line 161, in test_get_one_employee\n    assert new_employee[\"isActive\"] == True\n"}, "start": 1716723305302, "stop": 1716723305303}], "start": 1716723294251, "stop": 1716723305307, "uuid": "3bb7e849-83f7-4438-858a-6d9c8f0b332e", "historyId": "75da0d96f8dd7eda824e09825d1794ae", "testCaseId": "75da0d96f8dd7eda824e09825d1794ae", "fullName": "Lesson_9.db_employees_test#test_get_one_employee", "labels": [{"name": "story", "value": "Получение сотрудника по id"}, {"name": "severity", "value": "blocker"}, {"name": "as_id", "value": "SkyPro-3"}, {"name": "suite", "value": "Тесты на работу с сотрудниками"}, {"name": "feature", "value": "READ"}, {"name": "epic", "value": "Сотрудники"}, {"name": "parentSuite", "value": "Lesson_9"}, {"name": "host", "value": "DESKTOP-UVLT28S"}, {"name": "thread", "value": "57204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Lesson_9.db_employees_test"}]}