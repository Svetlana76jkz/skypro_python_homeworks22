{"name": "Получить сотрудника по id", "status": "failed", "statusDetails": {"message": "AssertionError: assert True == False", "trace": "@allure.id(\"SkyPro-3\")\n    @allure.epic(\"Сотрудники\")\n    @allure.severity(\"blocker\")\n    @allure.story(\"Получение сотрудника по id\")\n    @allure.feature(\"READ\")\n    @allure.title(\"Получить сотрудника по id\")\n    @allure.suite(\"Тесты на работу с сотрудниками\")\n    def test_get_one_employee():\n        with allure.step(\"Cоздать новую организацию\"):\n            name, description = generate_company()\n            db.create_company_db(name, description)\n    \n        max_id = db.get_max_id_company()\n    \n        api_list_before = api.get_employees_list(max_id)\n        db_list_before = db.get_emploees_db(max_id)\n    \n        with allure.step(\"Добавить нового сотрудника\"):\n            firstName, lastName, middleName, phone, email, birthdate, url, isActive = generate_employee(max_id)\n            db.create_employee_db(firstName, lastName, middleName, phone, email, birthdate, url, max_id, isActive)\n    \n        max_id_empl = db.get_max_id_employee()\n    \n        api_list_after = api.get_employees_list(max_id)\n        db_list_after = db.get_emploees_db(max_id)\n    \n    \n        new_employee = api.get_employee(max_id_empl)\n    \n        with allure.step(\"Проверить разницу\"):\n            with allure.step(\"Проверить, что список API = db до создания сотрудника\"):\n                assert len(api_list_before) == len(db_list_before)\n            with allure.step(\"Проверить, что список API = db после создания сотрудника\"):\n                assert len(api_list_after) == len(db_list_after)\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в API на 1\"):\n                assert len(api_list_after) - len(api_list_before) == 1\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в db на 1\"):\n                assert len(db_list_after) - len(db_list_before) == 1\n    \n        with allure.step(\"Проверить,что поля нового сотрудника. Корректно заполнены\"):\n            assert new_employee[\"firstName\"] == firstName\n            assert  new_employee[\"lastName\"] ==  lastName\n            assert new_employee[\"middleName\"] == middleName\n            assert new_employee[\"companyId\"] == max_id\n            #assert new_employee[\"phone\"] ==  phone\n            assert new_employee['avatar_url'] == url\n            assert new_employee[\"birthdate\"] == birthdate\n>           assert new_employee[\"isActive\"] == False\nE           assert True == False\n\ndb_employees_test.py:161: AssertionError"}, "steps": [{"name": "Cоздать новую организацию", "status": "passed", "steps": [{"name": "Метод для генерации названия организации", "status": "passed", "start": 1716723904738, "stop": 1716723904738}, {"name": "БД.Создать организацию с названием 'Любомир Ильясович Галкин':'Мотоцикл рота.'", "status": "passed", "parameters": [{"name": "name", "value": "'Любомир Ильясович Галкин'"}, {"name": "description", "value": "'Мотоцикл рота.'"}], "start": 1716723904739, "stop": 1716723905334}], "start": 1716723904738, "stop": 1716723905334}, {"name": "БД. Получить максимальный организации", "status": "passed", "start": 1716723905335, "stop": 1716723905934}, {"name": "api.Получить список сотрудников организации 4097", "status": "passed", "parameters": [{"name": "companyId", "value": "4097"}], "start": 1716723905934, "stop": 1716723908234}, {"name": "БД. Получить список сотрудников организации 4097", "status": "passed", "parameters": [{"name": "company_id", "value": "4097"}], "start": 1716723908234, "stop": 1716723908845}, {"name": "Добавить нового сотрудника", "status": "passed", "steps": [{"name": "Метод для генерации названий сотрудника", "status": "passed", "parameters": [{"name": "companyId", "value": "4097"}], "start": 1716723908846, "stop": 1716723908847}, {"name": "БД.Создать организацию с названием 'Мирон':'Пахомов':'Сильвестровна':65456513967:'tihonovaalina@example.com':'1976-07-02':'https://www.giperglobus.edu/':4097:True", "status": "passed", "parameters": [{"name": "first_name", "value": "'Мирон'"}, {"name": "last_name", "value": "'Пахомов'"}, {"name": "middle_name", "value": "'Сильвестровна'"}, {"name": "phone", "value": "65456513967"}, {"name": "email", "value": "'tihonovaalina@example.com'"}, {"name": "birthdate", "value": "'1976-07-02'"}, {"name": "avatar_url", "value": "'https://www.giperglobus.edu/'"}, {"name": "company_id", "value": "4097"}, {"name": "is_active", "value": "True"}], "start": 1716723908847, "stop": 1716723909451}], "start": 1716723908846, "stop": 1716723909451}, {"name": "БД. Получить максимальный id сотрудника", "status": "passed", "start": 1716723909452, "stop": 1716723910078}, {"name": "api.Получить список сотрудников организации 4097", "status": "passed", "parameters": [{"name": "companyId", "value": "4097"}], "start": 1716723910078, "stop": 1716723911968}, {"name": "БД. Получить список сотрудников организации 4097", "status": "passed", "parameters": [{"name": "company_id", "value": "4097"}], "start": 1716723911968, "stop": 1716723912567}, {"name": "api.Получить сотрудника по 2827", "status": "passed", "parameters": [{"name": "id", "value": "2827"}], "start": 1716723912567, "stop": 1716723914550}, {"name": "Проверить разницу", "status": "passed", "steps": [{"name": "Проверить, что список API = db до создания сотрудника", "status": "passed", "start": 1716723914551, "stop": 1716723914551}, {"name": "Проверить, что список API = db после создания сотрудника", "status": "passed", "start": 1716723914551, "stop": 1716723914551}, {"name": "Проверить, что список ДО меньше списка ПОСЛЕ в API на 1", "status": "passed", "start": 1716723914551, "stop": 1716723914551}, {"name": "Проверить, что список ДО меньше списка ПОСЛЕ в db на 1", "status": "passed", "start": 1716723914551, "stop": 1716723914551}], "start": 1716723914551, "stop": 1716723914551}, {"name": "Проверить,что поля нового сотрудника. Корректно заполнены", "status": "failed", "statusDetails": {"message": "AssertionError: assert True == False\n", "trace": "  File \"c:\\Users\\User\\Documents\\GitHub\\desktop-tutorial\\skypro_python_homeworks22\\Lesson_9\\db_employees_test.py\", line 161, in test_get_one_employee\n    assert new_employee[\"isActive\"] == False\n"}, "start": 1716723914552, "stop": 1716723914555}], "start": 1716723904738, "stop": 1716723914567, "uuid": "348295ce-73ce-44bf-8921-265157a0a505", "historyId": "75da0d96f8dd7eda824e09825d1794ae", "testCaseId": "75da0d96f8dd7eda824e09825d1794ae", "fullName": "Lesson_9.db_employees_test#test_get_one_employee", "labels": [{"name": "epic", "value": "Сотрудники"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "READ"}, {"name": "suite", "value": "Тесты на работу с сотрудниками"}, {"name": "as_id", "value": "SkyPro-3"}, {"name": "story", "value": "Получение сотрудника по id"}, {"name": "parentSuite", "value": "Lesson_9"}, {"name": "host", "value": "DESKTOP-UVLT28S"}, {"name": "thread", "value": "38316-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Lesson_9.db_employees_test"}]}