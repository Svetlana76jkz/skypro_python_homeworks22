{"name": "Получить сотрудника по id", "status": "broken", "statusDetails": {"message": "NameError: name 'query' is not defined", "trace": "@allure.id(\"SkyPro-3\")\n    @allure.epic(\"Сотрудники\")\n    @allure.severity(\"blocker\")\n    @allure.story(\"Получение сотрудника по id\")\n    @allure.feature(\"READ\")\n    @allure.title(\"Получить сотрудника по id\")\n    @allure.suite(\"Тесты на работу с сотрудниками\")\n    def test_get_one_employee():\n        with allure.step(\"Cоздать новую организацию\"):\n            name, description = generate_company()\n            db.create_company_db(name, description)\n    \n        max_id = db.get_max_id_company(id)\n    \n        api_list_before = api.get_employees_list(max_id)\n        db_list_before = db.get_emploees_db(max_id)\n    \n        with allure.step(\"Добавить нового сотрудника\"):\n            firstName, lastName, middleName, phone, email, birthdate, url, isActive = generate_employee(max_id)\n            db.create_employee_db(firstName, lastName, middleName, phone, email, birthdate, url, max_id, isActive)\n    \n        max_id_empl = db.get_max_id_employee(id)\n    \n        api_list_after = api.get_employees_list(max_id)\n        db_list_after = db.get_emploees_db(max_id)\n    \n    \n        new_employee = api.get_employee(max_id_empl)\n    \n        with allure.step(\"Проверить разницу\"):\n            with allure.step(\"Проверить, что список API = db до создания сотрудника\"):\n                assert len(api_list_before) == len(db_list_before)\n            with allure.step(\"Проверить, что список API = db после создания сотрудника\"):\n                assert len(api_list_after) == len(db_list_after)\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в API на 1\"):\n                assert len(api_list_after) - len(api_list_before) == 1\n            with allure.step(\"Проверить, что список ДО меньше списка ПОСЛЕ в db на 1\"):\n                assert len(db_list_after) - len(db_list_before) == 1\n    \n        with allure.step(\"Проверить,что поля нового сотрудника. Корректно заполнены\"):\n            assert new_employee[\"firstName\"] == firstName\n            assert  new_employee[\"lastName\"] ==  lastName\n            assert new_employee[\"middleName\"] == middleName\n            assert new_employee[\"companyId\"] == max_id\n            #assert new_employee[\"phone\"] ==  phone\n            assert new_employee['avatar_url'] == url\n            assert new_employee[\"birthdate\"] == birthdate\n            assert new_employee[\"isActive\"] == True\n            assert new_employee[\"id\"] == max_id_empl\n    \n>       db.delete_employee_db(max_id_empl)\n\nLesson_9\\db_employees_test.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EmployeesTable.EmployeesTable object at 0x000002194DC65CA0>, id = 2847\n\n    @allure.step(\"БД. Удалить сотрудника по {id}\")\n    def delete_employee_db(self, id):\n        qquery = self.__db.execute(self.__scripts['delete id employee'], id_to_delete = id)\n>       allure.attach(str(query.context.cursor.query), 'SQL', allure.attachment_type.TEXT)\nE       NameError: name 'query' is not defined\n\nLesson_9\\EmployeesTable.py:62: NameError"}, "steps": [{"name": "Cоздать новую организацию", "status": "passed", "steps": [{"name": "Метод для генерации названия организации", "status": "passed", "start": 1716726682051, "stop": 1716726682052}, {"name": "БД.Создать организацию с названием 'Капустина Лора Кирилловна':'О салон развитый.'", "status": "passed", "attachments": [{"name": "SQL", "source": "0eac85b1-a456-4254-88db-a33fe346db84-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'Капустина Лора Кирилловна'"}, {"name": "description", "value": "'О салон развитый.'"}], "start": 1716726682053, "stop": 1716726682650}], "start": 1716726682051, "stop": 1716726682650}, {"name": "БД. Получить максимальный <built-in function id> организации", "status": "passed", "attachments": [{"name": "SQL", "source": "1fb1a87b-5fb1-42a5-ba3e-9520fb6264e5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "id", "value": "<built-in function id>"}], "start": 1716726682651, "stop": 1716726683246}, {"name": "БД. Получить список сотрудников организации 4143", "status": "passed", "attachments": [{"name": "SQL", "source": "3a72a5bf-8042-435c-b706-970e1fe1dfad-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "company_id", "value": "4143"}], "start": 1716726685246, "stop": 1716726685883}, {"name": "Добавить нового сотрудника", "status": "passed", "steps": [{"name": "Метод для генерации названий сотрудника", "status": "passed", "parameters": [{"name": "companyId", "value": "4143"}], "start": 1716726685883, "stop": 1716726685895}, {"name": "БД.Создать организацию с названием 'Юлий':'Шилов':'Мечиславовна':50203532977:'eliseevagafon@example.com':'1976-07-02':'https://zao.biz/':4143:True", "status": "passed", "attachments": [{"name": "SQL", "source": "dabe6439-9861-44d6-869e-ddd129debb4d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "first_name", "value": "'Юлий'"}, {"name": "last_name", "value": "'Шилов'"}, {"name": "middle_name", "value": "'Мечиславовна'"}, {"name": "phone", "value": "50203532977"}, {"name": "email", "value": "'eliseevagafon@example.com'"}, {"name": "birthdate", "value": "'1976-07-02'"}, {"name": "avatar_url", "value": "'https://zao.biz/'"}, {"name": "company_id", "value": "4143"}, {"name": "is_active", "value": "True"}], "start": 1716726685896, "stop": 1716726686517}], "start": 1716726685883, "stop": 1716726686517}, {"name": "БД. Получить максимальный <built-in function id> сотрудника", "status": "passed", "attachments": [{"name": "SQL", "source": "f5e81347-957c-4768-9488-2fbd8c870a46-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "id", "value": "<built-in function id>"}], "start": 1716726686518, "stop": 1716726687139}, {"name": "БД. Получить список сотрудников организации 4143", "status": "passed", "attachments": [{"name": "SQL", "source": "7a318798-8269-4c78-b6c9-5b2fbaaa4fe7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "company_id", "value": "4143"}], "start": 1716726689427, "stop": 1716726690097}, {"name": "Проверить разницу", "status": "passed", "steps": [{"name": "Проверить, что список API = db до создания сотрудника", "status": "passed", "start": 1716726692166, "stop": 1716726692166}, {"name": "Проверить, что список API = db после создания сотрудника", "status": "passed", "start": 1716726692166, "stop": 1716726692167}, {"name": "Проверить, что список ДО меньше списка ПОСЛЕ в API на 1", "status": "passed", "start": 1716726692167, "stop": 1716726692167}, {"name": "Проверить, что список ДО меньше списка ПОСЛЕ в db на 1", "status": "passed", "start": 1716726692167, "stop": 1716726692167}], "start": 1716726692166, "stop": 1716726692167}, {"name": "Проверить,что поля нового сотрудника. Корректно заполнены", "status": "passed", "start": 1716726692168, "stop": 1716726692168}, {"name": "БД. Удалить сотрудника по 2847", "status": "broken", "statusDetails": {"message": "NameError: name 'query' is not defined\n", "trace": "  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\Documents\\GitHub\\desktop-tutorial\\skypro_python_homeworks22\\Lesson_9\\EmployeesTable.py\", line 62, in delete_employee_db\n    allure.attach(str(query.context.cursor.query), 'SQL', allure.attachment_type.TEXT)\n                      ^^^^^\n"}, "parameters": [{"name": "id", "value": "2847"}], "start": 1716726692168, "stop": 1716726692757}], "start": 1716726682051, "stop": 1716726692773, "uuid": "7353664d-a82c-4825-bac1-957e6266f359", "historyId": "75da0d96f8dd7eda824e09825d1794ae", "testCaseId": "75da0d96f8dd7eda824e09825d1794ae", "fullName": "Lesson_9.db_employees_test#test_get_one_employee", "labels": [{"name": "feature", "value": "READ"}, {"name": "story", "value": "Получение сотрудника по id"}, {"name": "suite", "value": "Тесты на работу с сотрудниками"}, {"name": "as_id", "value": "SkyPro-3"}, {"name": "severity", "value": "blocker"}, {"name": "epic", "value": "Сотрудники"}, {"name": "parentSuite", "value": "Lesson_9"}, {"name": "host", "value": "DESKTOP-UVLT28S"}, {"name": "thread", "value": "41740-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Lesson_9.db_employees_test"}]}